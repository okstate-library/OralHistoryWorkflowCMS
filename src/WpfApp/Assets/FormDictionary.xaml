<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <LinearGradientBrush x:Key="formBackground" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="Blue" Offset="0" />
        <GradientStop Color="#460000FF" Offset="1" />
    </LinearGradientBrush>
    <!--<my:String x:Key="applicationTitle">Resource Dictionary Demo</my:String>
    <my:Double x:Key="applicationTitleFontSize">18</my:Double>-->
    
    <SolidColorBrush x:Key="applicationTitleForeground">Yellow</SolidColorBrush>

    <SolidColorBrush x:Key="AlternativeColor">#DCDCDC</SolidColorBrush>

    <Style x:Key="TextBoxInputFormatLabel"  TargetType="{x:Type Label }" BasedOn="{StaticResource MaterialDesignLabel}">
        <Setter Property="Margin" Value="0 0 0 0" />
        <Setter Property="FontSize" Value="11"></Setter>
        <Setter Property="FontWeight" Value="Bold"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
    </Style>
    
    <Style x:Key="BoldLabel"  TargetType="{x:Type Label }" BasedOn="{StaticResource MaterialDesignLabel}">
        <Setter Property="Margin" Value="0 0 0 0" />
        <Setter Property="FontSize" Value="14"></Setter>
        <Setter Property="FontWeight" Value="Bold"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
    </Style>

    <Style x:Key="BoldTextBlock"  TargetType="{x:Type TextBlock }">
        <Setter Property="Margin" Value="0 0 0 0" />
        <Setter Property="FontSize" Value="14"></Setter>
        <Setter Property="FontWeight" Value="Bold"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
    </Style>

    <Style x:Key="PageTitleLabel"  TargetType="{x:Type Label }" BasedOn="{StaticResource MaterialDesignLabel}">
        <Setter Property="Margin" Value="0 0 0 0" />
        <Setter Property="FontSize" Value="20"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
    </Style>
    

    <Style x:Key="ListViewAlternatingRowStyle" TargetType="{x:Type ListViewItem}">
        <Style.Triggers>
            <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                <Setter Property="Height" Value="30"/>
            </Trigger>
            <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                <Setter Property="Background" Value="{DynamicResource PrimaryHueLightBrush}"/>
                <Setter Property="Height" Value="30"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource PrimaryHueDarkBrush}"/>
                <Setter Property="Height" Value="30"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="GridViewColumnHeaderStyle" TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="Gray"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
        <Setter Property="Margin" Value="1"></Setter>
    </Style>

    <Style x:Key="GridViewColumnHeaderLargeFontStyle" BasedOn="{StaticResource GridViewColumnHeaderStyle}" TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="FontSize" Value="13"></Setter>
        <Setter Property="Height" Value="45"></Setter>
    </Style>

    <Style x:Key="GridViewColumnHeaderMediumFontStyle" BasedOn="{StaticResource GridViewColumnHeaderStyle}" TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="FontSize" Value="12"></Setter>
    </Style>

 
    <Style TargetType="TextBlock" x:Key="OptionToggleButtonTextBlock" BasedOn="{StaticResource MaterialDesignBody1TextBlock}">
        <Setter Property="Margin" Value="20 5 0 3"/>
    </Style>

    <Style x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
        <Setter Property="Background" Value="Red"/>
    </Style>

    <Style x:Key="SideMenuExpander"  TargetType="{x:Type Expander }">
        <Setter Property="FontSize" Value="15"></Setter>
        <Setter Property="FontWeight" Value="Bold"></Setter>
    </Style>

    <Style x:Key="HorizontalMenuButton" TargetType="{x:Type Button }" BasedOn="{StaticResource MaterialDesignFloatingActionMiniLightButton}">
        <Setter Property="Margin" Value="5 0 0 0" />
        <Setter Property="Width" Value="34"/>
        <Setter Property="Height" Value="34"/>        
    </Style>
    
    <!--Toggle Button Styling-->

    <Style TargetType="ToggleButton" x:Key="OptionToggleButton" BasedOn="{StaticResource MaterialDesignSwitchToggleButton}">
        <Setter Property="Margin" Value="10 0 0 0"/>
    </Style>
    
    <Style TargetType="{x:Type ToggleButton}" x:Key="ToggleButtonStyle">
        <Setter Property="Width" Value="200" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueDarkForegroundBrush}"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}"/>
        <Setter Property="Width" Value="180"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>

    <Style TargetType="{x:Type ToggleButton}"  x:Key="ProgressToggleButtonStyle" BasedOn="{StaticResource ToggleButtonStyle}">
        <Setter Property="Content" Value="In Progress"/>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Content" Value="Complete"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type ToggleButton}"  x:Key="YesNoToggleButtonStyle" BasedOn="{StaticResource ToggleButtonStyle}">
        <Setter Property="Content" Value="No"/>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Content" Value="Yes"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Text box styling-->
    <Style TargetType="{x:Type TextBox}"  x:Key="EditableTextBox" BasedOn="{StaticResource MaterialDesignTextBox}">
        <Setter Property="Margin" Value="0 0 0 0" />
        <Setter Property="FontSize" Value="15"></Setter>
        <Setter Property="Background" Value="#DCDCDC"></Setter>
    </Style>

    <Style TargetType="{x:Type TextBox}"  x:Key="readOnlyTextBox" BasedOn="{StaticResource MaterialDesignTextBox}">
        <Setter Property="Margin" Value="0 0 0 0" />
        <Setter Property="FontSize" Value="15"></Setter>
        <Setter Property="IsReadOnly" Value="True"></Setter>
    </Style>

    <Style TargetType="{x:Type TextBox}"  x:Key="SearchTextBox" BasedOn="{StaticResource MaterialDesignTextBox}">
        <Setter Property="Margin" Value="0 0 0 0" />
        <Setter Property="FontSize" Value="15"></Setter>
        <Setter Property="Background" Value="#DCDCDC"></Setter>
    </Style>

    <Style TargetType="{x:Type TextBox}"  x:Key="WhiteTextBox" BasedOn="{StaticResource MaterialDesignTextBox}">
        <Setter Property="Margin" Value="0 0 0 0" />
        <Setter Property="FontSize" Value="15"></Setter>
        <Setter Property="Background" Value="#DCDCDC"></Setter>
    </Style>

    <!--TextBlock styling-->

    <Style TargetType="{x:Type TextBlock}"  x:Key="FilteredComboBoxStyle" BasedOn="{StaticResource MaterialDesignTextBox}">
        <Setter Property="Margin" Value="0 0 0 0" />
        <Setter Property="FontSize" Value="15"></Setter>
        <Setter Property="Background" Value="#DCDCDC"></Setter>
    </Style>
    

    <!--Border styling-->
    
    <Style x:Key="EmptyBorder" TargetType="{x:Type Border}" >
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Margin" Value="10" />
        <Setter Property="Grid.ColumnSpan" Value="5" />
    </Style>

    <Style x:Key="TinyEmptyBorder" TargetType="{x:Type Border}" >
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Margin" Value="5" />
    </Style>

    <!--Hyperlink-->

    <Style x:Key="UnderlineNoneHyperlink" TargetType="{x:Type Hyperlink}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="DarkSlateBlue" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="TextBlock.TextDecorations" Value="{x:Null}" />
    </Style>

</ResourceDictionary>